[build-system]
requires = ["setuptools", "scikit-build", "cmake", "ninja", "wheel", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "seidart"
version = "2.3.1"
license = {file = "LICENSE.txt"}
description = "SeidarT is a 2 and 2.5d seismic and electromagnetic modeling suite."
requires-python = ">=3.11"
readme = "README.rst"
authors = [
    { name = "Steven Bernsen", email = "steven.bernsen@maine.edu"},
    { name = "Christopher Gerbi", email = "christopher.gerbi@maine.edu"},
]
maintainers = [
    { name = "Steven Bernsen", email = "steven.bernsen@maine.edu"},
    { name = "Christopher Gerbi", email = "christopher.gerbi@maine.edu"},
]
dependencies = [
    "numpy",
    "scipy",
    "matplotlib",
    "pandas",
    "mplstereonet",
    "pyevtk",
    "glob2",
    "dill",
    "seaborn"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Framework :: Matplotlib",
    "Topic :: Scientific/Engineering :: Physics",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Development Status :: 4 - Beta",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = [
    "seidart",
    "seidart.fortran", 
    "seidart.routines", 
    "seidart.simulations", 
    "seidart.visualization"
]

[tool.setuptools.package-data]
seidart = ["fortran/*.so"]
# [tool.setuptools.extension]
# # Define Fortran extension
# name = "seidart.fortran.cpmlfdtd"
# sources = ["src/seidart/fortran/cpmlfdtd.f95"]



[project.scripts]
prjbuild = "seidart.routines.prjbuild:main"
prjrun = "seidart.routines.prjrun:main"
arraybuild = "seidart.routines.arraybuild:main"
sourcefunction = "seidart.routines.sourcefunction:main"
rcxdisplay = "seidart.visualization.rcxdisplay:main"
im2anim = "seidart.visualization.im2anim:build_animation"

# Optionals
[project.urls]
homepage = "https://github.com/UMainedynamics/SeidarT"
documentation = "https://umainedynamics.github.io/SeidarT/index.html"

# [tool.setuptool_scm]
# write_to = "seidart/_version.py"

# ------------------------------------------------------------------------------
# Copied from Scipy's pyproject.toml
# [tool.cibuildwheel.linux]
# manylinux-x86_64-image = "manylinux2014"
# manylinux-aarch64-image = "manylinux2014"
# before-build = "bash {project}/tools/wheels/cibw_before_build_linux.sh {project}"

# [tool.cibuildwheel.linux.environment]
# # /project will be the $PWD equivalent inside the docker used to build the wheel
# PKG_CONFIG_PATH = "/project/"

# [tool.cibuildwheel.macos]
# before-build = "bash {project}/tools/wheels/cibw_before_build_macos.sh {project}"

# [tool.cibuildwheel.macos.environment]
# PKG_CONFIG_PATH = "{project}"

# [tool.cibuildwheel.windows]
# before-build = "bash {project}/tools/wheels/cibw_before_build_win.sh {project}"
# repair-wheel-command = "bash ./tools/wheels/repair_windows.sh {wheel} {dest_dir}"

# [tool.cibuildwheel.windows.environment]
# # This does not work because pkg-config does not like backslashes,
# PKG_CONFIG_PATH = "{project}"
# # do this instead (which will override this setting)
# # set CIBW_ENVIRONMENT_WINDOWS=PKG_CONFIG_PATH=PWD.replace('\\', '/')